@using BestReg.Data
@model List<AttendanceRecord>

@{
    ViewData["Title"] = "School Authority Dashboard";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-12">
            <h2 class="text-center">Welcome, School Authority</h2>

            @if (!string.IsNullOrEmpty(ViewBag.Error))
            {
                <div class="alert alert-danger" role="alert">
                    @ViewBag.Error
                </div>
            }

            @if (!string.IsNullOrEmpty(ViewBag.Success))
            {
                <div class="alert alert-success" role="alert">
                    @ViewBag.Success
                </div>
            }

            <!-- Quick Actions Card -->
            <div class="card mt-4">
                <div class="card-body">
                    <h4 class="card-title">Quick Actions</h4>
                    <div class="d-grid gap-2 d-md-block">
                        <a asp-controller="QrCode" asp-action="ScanQRCode" asp-route-scanType="SchoolCheckIn" asp-route-role="SchoolAuthority" class="btn btn-primary">Scan In</a>
                        <a asp-controller="QrCode" asp-action="ScanQRCode" asp-route-scanType="SchoolCheckOut" asp-route-role="SchoolAuthority" class="btn btn-danger">Scan Out</a>
                    </div>
                </div>
            </div>

            <!-- Recent Activity Card -->
            <div class="card mt-4">
                <div class="card-body">
                    <h4 class="card-title">Recent Activity</h4>
                    @if (Model != null && Model.Any())
                    {
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Student</th>
                                    <th>Check-In Time</th>
                                    <th>Check-Out Time</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var record in Model)
                                {
                                    <tr>
                                        <td>@(record.User?.UserName ?? "Unknown")</td>
                                        <td>@(record.SchoolCheckIn?.ToString("HH:mm") ?? "-")</td>
                                        <td>@(record.SchoolCheckOut?.ToString("HH:mm") ?? "-")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <p>No recent activity to display.</p>
                    }
                </div>
            </div>

            <!-- Attendance Statistics Card -->
            <div class="card mt-4">
                <div class="card-body">
                    <h4 class="card-title">Attendance Statistics</h4>
                    <canvas id="attendanceChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>

        @section Scripts {
            <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
            <script>
                fetch('/SchoolAuthority/GetAttendanceData')
                    .then(response => response.json())
                    .then(data => {
                        const ctx = document.getElementById('attendanceChart').getContext('2d');
                        new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: data.map(d => d.userName),
                                datasets: [
                                    {
                                        label: 'Check-in Time',
                                        data: data.map(d => d.schoolCheckIn ? new Date(d.schoolCheckIn).getHours() + new Date(d.schoolCheckIn).getMinutes() / 60 : null),
                                        backgroundColor: 'rgba(75, 192, 192, 0.6)'
                                    },
                                    {
                                        label: 'Check-out Time',
                                        data: data.map(d => d.schoolCheckOut ? new Date(d.schoolCheckOut).getHours() + new Date(d.schoolCheckOut).getMinutes() / 60 : null),
                                        backgroundColor: 'rgba(255, 99, 132, 0.6)'
                                    }
                                ]
                            },
                            options: {
                                responsive: true,
                                scales: {
                                    y: {
                                        beginAtZero: true,
                                        max: 24,
                                        title: {
                                            display: true,
                                            text: 'Time (24-hour format)'
                                        }
                                    }
                                }
                           
                            }
                        });

                    });
            </script>
        }
