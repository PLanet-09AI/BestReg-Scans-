@model List<AttendanceRecord>

@{
    ViewData["Title"] = "Bus Driver Dashboard";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-12">
            <h2 class="text-center">Welcome, Bus Driver</h2>

            @if (!string.IsNullOrEmpty(ViewBag.Error))
            {
                <div class="alert alert-danger" role="alert">
                    @ViewBag.Error
                </div>
            }

            @if (!string.IsNullOrEmpty(ViewBag.Success))
            {
                <div class="alert alert-success" role="alert">
                    @ViewBag.Success
                </div>
            }

            <!-- Quick Actions Card -->
            <div class="card mt-4">
                <div class="card-body">
                    <h4 class="card-title">Quick Actions</h4>
                    <div class="d-grid gap-2 d-md-block">
                        <a asp-controller="QrCode" asp-action="ScanQRCode" asp-route-scanType="BusCheckInHome" asp-route-role="BusDriver" class="btn btn-primary btn-lg">Scan In at Home</a>
                        <a asp-controller="QrCode" asp-action="ScanQRCode" asp-route-scanType="BusCheckOutSchool" asp-route-role="BusDriver" class="btn btn-warning btn-lg">Scan Out at School</a>
                        <a asp-controller="QrCode" asp-action="ScanQRCode" asp-route-scanType="BusCheckInSchool" asp-route-role="BusDriver" class="btn btn-info btn-lg">Scan In at School</a>
                        <a asp-controller="QrCode" asp-action="ScanQRCode" asp-route-scanType="BusCheckOutHome" asp-route-role="BusDriver" class="btn btn-danger btn-lg">Scan Out at Home</a>
                    </div>
                </div>
            </div>

            <!-- Recent Activity Card -->
            <div class="card mt-4">
                <div class="card-body">
                    <h4 class="card-title">Recent Activity</h4>
                    @if (Model != null && Model.Any())
                    {
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Student</th>
                                    <th>Check-In Home</th>
                                    <th>Check-Out School</th>
                                    <th>Check-In School</th>
                                    <th>Check-Out Home</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var record in Model)
                                {
                                    <tr>
                                        <td>@(record.User?.UserName ?? "Unknown")</td>
                                        <td>@(record.BusCheckInHome?.ToString("HH:mm") ?? "-")</td>
                                        <td>@(record.BusCheckOutSchool?.ToString("HH:mm") ?? "-")</td>
                                        <td>@(record.BusCheckInSchool?.ToString("HH:mm") ?? "-")</td>
                                        <td>@(record.BusCheckOutHome?.ToString("HH:mm") ?? "-")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <p>No recent activity to display.</p>
                    }
                </div>
            </div>

            <!-- Attendance Statistics Card -->
            <div class="card mt-4">
                <div class="card-body">
                    <h4 class="card-title">Attendance Statistics</h4>
                    <canvas id="attendanceChart" width="400" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        fetch('/BusDriver/GetAttendanceData')
            .then(response => response.json())
            .then(data => {
                const ctx = document.getElementById('attendanceChart').getContext('2d');
                new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: data.map(d => d.userName),
                        datasets: [
                            {
                                label: 'Check-In Home',
                                data: data.map(d => d.busCheckInHome ? new Date(d.busCheckInHome).getHours() + new Date(d.busCheckInHome).getMinutes() / 60 : null),
                                backgroundColor: 'rgba(75, 192, 192, 0.6)'
                            },
                            {
                                label: 'Check-Out School',
                                data: data.map(d => d.busCheckOutSchool ? new Date(d.busCheckOutSchool).getHours() + new Date(d.busCheckOutSchool).getMinutes() / 60 : null),
                                backgroundColor: 'rgba(255, 99, 132, 0.6)'
                            },
                            {
                                label: 'Check-In School',
                                data: data.map(d => d.busCheckInSchool ? new Date(d.busCheckInSchool).getHours() + new Date(d.busCheckInSchool).getMinutes() / 60 : null),
                                backgroundColor: 'rgba(54, 162, 235, 0.6)'
                            },
                            {
                                label: 'Check-Out Home',
                                data: data.map(d => d.busCheckOutHome ? new Date(d.busCheckOutHome).getHours() + new Date(d.busCheckOutHome).getMinutes() / 60 : null),
                                backgroundColor: 'rgba(255, 206, 86, 0.6)'
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 24,
                                title: {
                                    display: true,
                                    text: 'Time (24-hour format)'
                                }
                            }
                        }
                    }
                });
            });
    </script>
}
