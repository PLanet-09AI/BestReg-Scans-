@model QrCodeScanViewModel

@{
    ViewData["Title"] = "Scan QR Code";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h2 class="card-title text-center">Scan QR Code</h2>

                    <!-- Container for video and canvas -->
                    <div style="position: relative; width: 100%; padding-top: 56.25%; background: #000;">
                        <!-- Video stream for QR code scanning -->
                        <video id="video" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: 1px solid gray;" autoplay></video>
                        <!-- Canvas for drawing QR code feedback -->
                        <canvas id="canvas" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></canvas>
                    </div>

                    <!-- Display scanned QR code data -->
                    <div id="qr-reader-results" class="mt-3 text-center"></div>

                    <!-- Form to submit the scanned QR code data -->
                    <form id="checkInForm" asp-action="CheckInUser" method="post">
                        <!-- Hidden field to store the scanned QR code data -->
                        <input type="hidden" id="qrCodeData" name="qrCodeData" />
                        <!-- Button to check the user in, initially hidden -->
                        <button type="submit" class="w-100 btn btn-lg btn-primary mt-3" id="checkInBtn" style="display:none;">
                            <span id="checkInText">Check In</span>
                            <span id="loader" class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display:none;"></span>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Include the jsQR library -->
    <script src="https://cdn.jsdelivr.net/npm/jsqr/dist/jsQR.js"></script>
    <script>
        const video = document.getElementById("video");
        const canvas = document.getElementById("canvas");
        const context = canvas.getContext("2d");
        const qrResult = document.getElementById("qr-reader-results");
        const checkInBtn = document.getElementById("checkInBtn");
        const qrCodeDataInput = document.getElementById("qrCodeData");
        const loader = document.getElementById("loader");
        const checkInText = document.getElementById("checkInText");

        navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } })
            .then(function (stream) {
                video.srcObject = stream;
                video.setAttribute("playsinline", true); // required to tell iOS Safari we don't want fullscreen
                video.play();
                requestAnimationFrame(tick);
            })
            .catch(function (err) {
                console.error("Error accessing the camera: ", err);
                qrResult.innerHTML = `<span class="text-danger">Failed to access the camera. Please ensure camera permissions are granted.</span>`;
            });

        function tick() {
            if (video.readyState === video.HAVE_ENOUGH_DATA) {
                canvas.hidden = false;
                canvas.height = video.videoHeight;
                canvas.width = video.videoWidth;
                context.drawImage(video, 0, 0, canvas.width, canvas.height);

                const imageData = context.getImageData(0, 0, canvas.width, canvas.height);
                const code = jsQR(imageData.data, imageData.width, imageData.height, {
                    inversionAttempts: "dontInvert",
                });

                if (code) {
                    drawLine(code.location.topLeftCorner, code.location.topRightCorner, "#FF3B58");
                    drawLine(code.location.topRightCorner, code.location.bottomRightCorner, "#FF3B58");
                    drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, "#FF3B58");
                    drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, "#FF3B58");

                    qrResult.innerHTML = `<span class="text-success">QR Code detected: ${code.data}</span>`;
                    qrCodeDataInput.value = code.data;
                    checkInBtn.style.display = 'block'; // Show the Check In button
                    triggerCheckIn(); // Trigger the check-in process automatically
                }
            }
            requestAnimationFrame(tick);
        }

        function drawLine(begin, end, color) {
            context.beginPath();
            context.moveTo(begin.x, begin.y);
            context.lineTo(end.x, end.y);
            context.lineWidth = 4;
            context.strokeStyle = color;
            context.stroke();
        }

        function triggerCheckIn() {
            checkInText.style.display = 'none'; // Hide the text
            loader.style.display = 'inline-block'; // Show the loader
            // Submit the form after a short delay to simulate the loading process
            setTimeout(() => {
                document.getElementById("checkInForm").submit();
            }, 1000); // Adjust the delay as needed
        }
    </script>
}

